// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Data;

namespace Portal.Api.Migrations.SqliteMigrations
{
    [DbContext(typeof(SqlitePortalContext))]
    partial class SqlitePortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Portal.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("0.00");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<decimal>("PrevMonthClosingBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("0.00");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5daf5fd9-2db7-4043-a967-6c5bd111288d"),
                            AccountNo = "686847363244",
                            CurrentBalance = 0m,
                            IsActive = true,
                            PrevMonthClosingBalance = 0m,
                            UserId = new Guid("b88ebde1-9650-4468-a930-689b116fb5e3")
                        },
                        new
                        {
                            Id = new Guid("f14f3aa3-6e84-47e9-88f7-0ffb99539b2c"),
                            AccountNo = "815571025629",
                            CurrentBalance = 0m,
                            IsActive = true,
                            PrevMonthClosingBalance = 0m,
                            UserId = new Guid("4a7beb92-d4a9-4db1-83f8-eb0facb780e0")
                        });
                });

            modelBuilder.Entity("Portal.Data.Entities.Profile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("b88ebde1-9650-4468-a930-689b116fb5e3"),
                            FirstName = "Daniel",
                            LastName = "Melamed"
                        },
                        new
                        {
                            UserId = new Guid("4a7beb92-d4a9-4db1-83f8-eb0facb780e0"),
                            FirstName = "Ting",
                            LastName = "Niu"
                        });
                });

            modelBuilder.Entity("Portal.Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PostedBalance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("0.00");

                    b.Property<DateTimeOffset>("XtnDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("XtnType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Portal.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b88ebde1-9650-4468-a930-689b116fb5e3"),
                            LastLoginDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Login = "dmelamed3244",
                            Password = "(Pass@word)1234!"
                        },
                        new
                        {
                            Id = new Guid("4a7beb92-d4a9-4db1-83f8-eb0facb780e0"),
                            LastLoginDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Login = "tniu5629",
                            Password = "(Pass@word)5678!"
                        });
                });

            modelBuilder.Entity("Portal.Data.Entities.Account", b =>
                {
                    b.HasOne("Portal.Data.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Portal.Data.Entities.Profile", b =>
                {
                    b.HasOne("Portal.Data.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Portal.Data.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Portal.Data.Entities.Transaction", b =>
                {
                    b.HasOne("Portal.Data.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Portal.Data.Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Portal.Data.Entities.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
